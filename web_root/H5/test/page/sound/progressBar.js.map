{
    "version": 3,
    "file": "progressBar.js",
    "sourceRoot": "",
    "sources": [
        "/page/sound/progressBar.ts"
    ],
    "names": [],
    "mappings": "AAAA,IAAO,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC9B,IAAO,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAGpC,IAAI,mBAAiC,CAAC;AAEtC;IACC,mBAAmB,CAAC,MAAM,EAAE,CAAC;AAC9B,CAAC;AAED,iBAAkB,SAAQ,KAAK;IAS9B;QACC,KAAK,EAAE,CAAC;QATD,aAAQ,GAAW,GAAG,CAAC;QACvB,cAAS,GAAW,EAAE,CAAC;QAEvB,YAAO,GAAW,CAAC,CAAC,CAAC,QAAQ;QAC7B,UAAK,GAAW,CAAC,CAAC;QAClB,QAAG,GAAW,GAAG,CAAC;QAMzB,IAAI,CAAC,GAAa,IAAI,CAAC,QAAQ,CAAC;QAChC;qCAC6B;QAE7B,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEhD,CAAC,CAAC,OAAO,EAAE,CAAC;QAEZ,mBAAmB,GAAG,IAAI,CAAC;QAC3B,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAG,eAAe,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM;QACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC;gBAChB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;gBAChB,IAAI,CAAC,GAAa,IAAI,CAAC,QAAQ,CAAC;gBAChC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9C,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3C,CAAC;QACF,CAAC;QACD,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;IACF,CAAC;IAED,IAAI,QAAQ,CAAC,CAAS;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,OAAO;QACN,WAAW;QACX,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAG,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CACD",
    "sourcesContent": [
        "import Shape = createjs.Shape;\r\nimport Graphics = createjs.Graphics;\r\n\r\n\r\nlet progressBarInstance : ProgressBar;\r\n\r\nfunction progressBarTick() {\r\n\tprogressBarInstance.update();\r\n}\r\n\r\nclass ProgressBar extends Shape implements IDispose{\r\n\tprivate barWidth: number = 200;\r\n\tprivate barHeight: number = 15;\r\n\r\n\tprivate percent: number = 0; // 0 ~ 1\r\n\tprivate width: number = 0;\r\n\tprivate hue: number = 100;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tlet g :Graphics = this.graphics;\r\n\t\t/*g.beginFill('#272822');\r\n\t\tg.drawRect(0, 0, 400, 200);*/\r\n\r\n\t\tg.beginFill('#888');\r\n\t\tg.drawRect(0, 0, this.barWidth, this.barHeight);\r\n\r\n\t\tg.endFill();\r\n\r\n\t\tprogressBarInstance = this;\r\n\t\tcreatejs.Ticker.addEventListener('tick',  progressBarTick);\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tconsole.log('update');\r\n\t\tif (this.percent < 1) {\r\n\r\n\t\t\tif (this.width / this.barWidth < this.percent) {\r\n\t\t\t\tthis.hue += 0.8;\r\n\t\t\t\tthis.width += 2;\r\n\t\t\t\tlet g :Graphics = this.graphics;\r\n\t\t\t\tg.beginFill(createjs.Graphics.getHSL(this.hue, 100, 40, 1));\r\n\t\t\t\tg.drawRect(0, 0, this.width, this.barHeight);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.width = this.barWidth * this.percent;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tset progress(n: number) {\r\n\t\tthis.percent = n;\r\n\t}\r\n\r\n\tdispose(){\r\n\t\t//debugger;\r\n\t\tcreatejs.Ticker.removeEventListener('tick' , progressBarTick);\r\n\t\tthis.parent.removeChild(this);\r\n\t}\r\n}"
    ]
}